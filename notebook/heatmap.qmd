---
title: "Plot heatmap"
format: html
---

## Libraries

Load libraries.

```{r load_libraries}
suppressPackageStartupMessages(library(pheatmap))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(tidyr))
```

## Prepare data

Store all data into a data frame.

```{r my_df}
my_dir <- '../data'
lapply(
  list.files(my_dir, pattern = ".csv$", full.names = TRUE),
  function(x){
    cbind(gene = sub("\\.\\w+$", "", basename(x)), read.csv(x))
  }
) |>
  do.call("rbind", args = _) -> my_df

head(my_df)
```

Split `id` column.

```{r id_split}
do.call("rbind", strsplit(x = my_df$id, split = "\\.")) |>
  as.data.frame() -> id_split

colnames(id_split) <- c('root', 'system', 'organ', 'tissue')
head(id_split)
```

Rename tissues.

```{r cap_first}
cap_first <- function(x){
  s <- strsplit(x, "")[[1]][1]
  return(sub(s, toupper(s), x))
}

id_split$tissue <- tolower(id_split$tissue)
id_split$tissue <- sapply(id_split$tissue, cap_first)
head(id_split)
```

Combine `my_df` with `id_split`.

```{r combine_my_df_id_split}
my_df <- cbind(my_df, id_split)
head(my_df)
```

Order and create factors.

```{r create_factors}
my_df <- my_df[order(my_df$gene, my_df$system), ]
my_df$system <- factor(my_df$system, levels = unique(my_df$system))
my_df$organ <- factor(my_df$organ, levels = unique(my_df$organ))
my_df$tissue <- factor(my_df$tissue, levels = unique(my_df$tissue))
head(my_df)
```

Create gene expression table.

```{r my_df_wide}
my_df |>
  dplyr::select(gene, median, tissue) |>
  tidyr::pivot_wider(names_from = tissue, values_from = median) -> my_df_wide

head(my_df_wide)
```

Create matrix for {pheatmap}.

```{r my_mat}
my_mat <- as.matrix(my_df_wide[, -1])
row.names(my_mat) <- my_df_wide$gene
my_order <- colnames(my_mat)
```

## Heatmap

Create sample annotation.

```{r sample_anno}
my_df |>
  dplyr::select(system, organ, tissue) |>
  dplyr::distinct() |>
  dplyr::arrange(match(tissue, my_order)) |>
  dplyr::select(-tissue) -> sample_anno

row.names(sample_anno) <- my_order
```

Define breaks.

```{r my_breaks}
sample_anno$system |>
  as.numeric() |>
  diff() -> my_breaks

my_breaks <- which(my_breaks == 1)
```

Plot without clustering the columns.

```{r pheatmap, fig.width=13, fig.height=16}
pheatmap(
  mat = my_mat,
  annotation_col = sample_anno,
  cluster_cols = FALSE,
  scale = "none",
  gaps_col = my_breaks
)
```
